{
  "health": {
    "status": "HEALTH_WARN",
    "checks": [
      {
        "severity": "HEALTH_WARN",
        "summary": {
          "message": "insufficient standby MDS daemons available",
          "count": 1
        },
        "detail": [
          {
            "message": "have 0; want 1 more"
          }
        ],
        "muted": false,
        "type": "MDS_INSUFFICIENT_STANDBY"
      },
      {
        "severity": "HEALTH_WARN",
        "summary": {
          "message": "clock skew detected on mon.ceph-02, mon.ceph-03",
          "count": 2
        },
        "detail": [
          {
            "message": "mon.ceph-02 clock skew 5.53103s > max 0.05s (latency 0.00198948s)"
          },
          {
            "message": "mon.ceph-03 clock skew 10.9182s > max 0.05s (latency 0.00280241s)"
          }
        ],
        "muted": false,
        "type": "MON_CLOCK_SKEW"
      },
      {
        "severity": "HEALTH_WARN",
        "summary": {
          "message": "113145 slow ops, oldest one blocked for 28834 sec, mon.ceph-03 has slow ops",
          "count": 1
        },
        "detail": [],
        "muted": false,
        "type": "SLOW_OPS"
      }
    ],
    "mutes": []
  },
  "mon_status": {
    "monmap": {
      "mons": [
        {},
        {},
        {}
      ]
    },
    "quorum": [
      0,
      1,
      2
    ]
  },
  "fs_map": {
    "filesystems": [
      {
        "mdsmap": {
          "epoch": 507,
          "flags": 18,
          "flags_state": {
            "joinable": true,
            "allow_snaps": true,
            "allow_multimds_snaps": true,
            "allow_standby_replay": false,
            "refuse_client_session": false,
            "refuse_standby_for_another_fs": false,
            "balance_automate": false
          },
          "ever_allowed_features": 0,
          "explicitly_allowed_features": 0,
          "tableserver": 0,
          "root": 0,
          "session_timeout": 60,
          "session_autoclose": 300,
          "required_client_features": {},
          "max_file_size": 1099511627776,
          "max_xattr_size": 65536,
          "last_failure": 0,
          "last_failure_osd_epoch": 560,
          "compat": {
            "compat": {},
            "ro_compat": {},
            "incompat": {
              "feature_1": "base v0.20",
              "feature_2": "client writeable ranges",
              "feature_3": "default file layouts on dirs",
              "feature_4": "dir inode in separate object",
              "feature_5": "mds uses versioned encoding",
              "feature_6": "dirfrag is stored in omap",
              "feature_7": "mds uses inline data",
              "feature_8": "no anchor table",
              "feature_9": "file layout v2",
              "feature_10": "snaprealm v2",
              "feature_11": "minor log segments",
              "feature_12": "quiesce subvolumes"
            }
          },
          "max_mds": 1,
          "in": [
            0
          ],
          "up": {
            "mds_0": 54114
          },
          "failed": [],
          "damaged": [],
          "stopped": [],
          "info": {
            "gid_54114": {
              "gid": 54114,
              "name": "cephfs.ceph-01.nzymru",
              "rank": 0,
              "incarnation": 504,
              "state_seq": 1137,
              "addrs": {
                "addrvec": [
                  {
                    "type": "v2",
                    "nonce": 975581062,
                    "addr": "192.168.0.31:6800"
                  },
                  {
                    "type": "v1",
                    "nonce": 975581062,
                    "addr": "192.168.0.31:6801"
                  }
                ]
              },
              "join_fscid": 1,
              "export_targets": [],
              "features": 4540701547738038300,
              "flags": 0,
              "compat": {
                "compat": {},
                "ro_compat": {},
                "incompat": {
                  "feature_1": "base v0.20",
                  "feature_2": "client writeable ranges",
                  "feature_3": "default file layouts on dirs",
                  "feature_4": "dir inode in separate object",
                  "feature_5": "mds uses versioned encoding",
                  "feature_6": "dirfrag is stored in omap",
                  "feature_7": "mds uses inline data",
                  "feature_8": "no anchor table",
                  "feature_9": "file layout v2",
                  "feature_10": "snaprealm v2",
                  "feature_11": "minor log segments",
                  "feature_12": "quiesce subvolumes"
                }
              },
              "state": "up:active",
              "addr": "192.168.0.31:6801/975581062"
            }
          },
          "data_pools": [
            3
          ],
          "metadata_pool": 2,
          "enabled": true,
          "fs_name": "cephfs",
          "balancer": "",
          "bal_rank_mask": "-1",
          "standby_count_wanted": 1,
          "qdb_leader": 54114,
          "qdb_cluster": [
            54114
          ],
          "created": "2025-03-05T00:26:57.620760+0000",
          "modified": "2025-05-30T08:08:47.582443+0000"
        }
      },
      {
        "mdsmap": {
          "epoch": 507,
          "flags": 18,
          "flags_state": {
            "joinable": true,
            "allow_snaps": true,
            "allow_multimds_snaps": true,
            "allow_standby_replay": false,
            "refuse_client_session": false,
            "refuse_standby_for_another_fs": false,
            "balance_automate": false
          },
          "ever_allowed_features": 0,
          "explicitly_allowed_features": 0,
          "tableserver": 0,
          "root": 0,
          "session_timeout": 60,
          "session_autoclose": 300,
          "required_client_features": {},
          "max_file_size": 1099511627776,
          "max_xattr_size": 65536,
          "last_failure": 0,
          "last_failure_osd_epoch": 560,
          "compat": {
            "compat": {},
            "ro_compat": {},
            "incompat": {
              "feature_1": "base v0.20",
              "feature_2": "client writeable ranges",
              "feature_3": "default file layouts on dirs",
              "feature_4": "dir inode in separate object",
              "feature_5": "mds uses versioned encoding",
              "feature_6": "dirfrag is stored in omap",
              "feature_7": "mds uses inline data",
              "feature_8": "no anchor table",
              "feature_9": "file layout v2",
              "feature_10": "snaprealm v2",
              "feature_11": "minor log segments",
              "feature_12": "quiesce subvolumes"
            }
          },
          "max_mds": 1,
          "in": [
            0
          ],
          "up": {
            "mds_0": 54117
          },
          "failed": [],
          "damaged": [],
          "stopped": [],
          "info": {
            "gid_54117": {
              "gid": 54117,
              "name": "cephfs01.ceph-01.fsmpeg",
              "rank": 0,
              "incarnation": 504,
              "state_seq": 1137,
              "addrs": {
                "addrvec": [
                  {
                    "type": "v2",
                    "nonce": 1574331187,
                    "addr": "192.168.0.31:6802"
                  },
                  {
                    "type": "v1",
                    "nonce": 1574331187,
                    "addr": "192.168.0.31:6803"
                  }
                ]
              },
              "join_fscid": 2,
              "export_targets": [],
              "features": 4540701547738038300,
              "flags": 0,
              "compat": {
                "compat": {},
                "ro_compat": {},
                "incompat": {
                  "feature_1": "base v0.20",
                  "feature_2": "client writeable ranges",
                  "feature_3": "default file layouts on dirs",
                  "feature_4": "dir inode in separate object",
                  "feature_5": "mds uses versioned encoding",
                  "feature_6": "dirfrag is stored in omap",
                  "feature_7": "mds uses inline data",
                  "feature_8": "no anchor table",
                  "feature_9": "file layout v2",
                  "feature_10": "snaprealm v2",
                  "feature_11": "minor log segments",
                  "feature_12": "quiesce subvolumes"
                }
              },
              "state": "up:active",
              "addr": "192.168.0.31:6803/1574331187"
            }
          },
          "data_pools": [
            5
          ],
          "metadata_pool": 4,
          "enabled": true,
          "fs_name": "cephfs01",
          "balancer": "",
          "bal_rank_mask": "-1",
          "standby_count_wanted": 1,
          "qdb_leader": 54117,
          "qdb_cluster": [
            54117
          ],
          "created": "2025-03-05T07:26:06.761665+0000",
          "modified": "2025-05-30T08:08:47.582446+0000"
        }
      },
      {
        "mdsmap": {
          "epoch": 507,
          "flags": 18,
          "flags_state": {
            "joinable": true,
            "allow_snaps": true,
            "allow_multimds_snaps": true,
            "allow_standby_replay": false,
            "refuse_client_session": false,
            "refuse_standby_for_another_fs": false,
            "balance_automate": false
          },
          "ever_allowed_features": 0,
          "explicitly_allowed_features": 0,
          "tableserver": 0,
          "root": 0,
          "session_timeout": 60,
          "session_autoclose": 300,
          "required_client_features": {},
          "max_file_size": 1099511627776,
          "max_xattr_size": 65536,
          "last_failure": 0,
          "last_failure_osd_epoch": 560,
          "compat": {
            "compat": {},
            "ro_compat": {},
            "incompat": {
              "feature_1": "base v0.20",
              "feature_2": "client writeable ranges",
              "feature_3": "default file layouts on dirs",
              "feature_4": "dir inode in separate object",
              "feature_5": "mds uses versioned encoding",
              "feature_6": "dirfrag is stored in omap",
              "feature_7": "mds uses inline data",
              "feature_8": "no anchor table",
              "feature_9": "file layout v2",
              "feature_10": "snaprealm v2",
              "feature_11": "minor log segments",
              "feature_12": "quiesce subvolumes"
            }
          },
          "max_mds": 1,
          "in": [
            0
          ],
          "up": {
            "mds_0": 54129
          },
          "failed": [],
          "damaged": [],
          "stopped": [],
          "info": {
            "gid_54129": {
              "gid": 54129,
              "name": "cephfs02.ceph-02.nhmepo",
              "rank": 0,
              "incarnation": 504,
              "state_seq": 1136,
              "addrs": {
                "addrvec": [
                  {
                    "type": "v2",
                    "nonce": 2733373622,
                    "addr": "192.168.0.32:6800"
                  },
                  {
                    "type": "v1",
                    "nonce": 2733373622,
                    "addr": "192.168.0.32:6801"
                  }
                ]
              },
              "join_fscid": 3,
              "export_targets": [],
              "features": 4540701547738038300,
              "flags": 0,
              "compat": {
                "compat": {},
                "ro_compat": {},
                "incompat": {
                  "feature_1": "base v0.20",
                  "feature_2": "client writeable ranges",
                  "feature_3": "default file layouts on dirs",
                  "feature_4": "dir inode in separate object",
                  "feature_5": "mds uses versioned encoding",
                  "feature_6": "dirfrag is stored in omap",
                  "feature_7": "mds uses inline data",
                  "feature_8": "no anchor table",
                  "feature_9": "file layout v2",
                  "feature_10": "snaprealm v2",
                  "feature_11": "minor log segments",
                  "feature_12": "quiesce subvolumes"
                }
              },
              "state": "up:active",
              "addr": "192.168.0.32:6801/2733373622"
            }
          },
          "data_pools": [
            7
          ],
          "metadata_pool": 6,
          "enabled": true,
          "fs_name": "cephfs02",
          "balancer": "",
          "bal_rank_mask": "-1",
          "standby_count_wanted": 1,
          "qdb_leader": 54129,
          "qdb_cluster": [
            54129
          ],
          "created": "2025-03-05T07:26:11.089757+0000",
          "modified": "2025-05-30T08:08:47.582448+0000"
        }
      }
    ],
    "standbys": []
  },
  "osd_map": {
    "osds": [
      {
        "in": 1,
        "up": 1,
        "state": [
          "exists",
          "up"
        ]
      },
      {
        "in": 1,
        "up": 1,
        "state": [
          "exists",
          "up"
        ]
      },
      {
        "in": 1,
        "up": 1,
        "state": [
          "exists",
          "up"
        ]
      }
    ]
  },
  "scrub_status": "Inactive",
  "pg_info": {
    "object_stats": {
      "num_objects": 69,
      "num_object_copies": 207,
      "num_objects_degraded": 0,
      "num_objects_misplaced": 0,
      "num_objects_unfound": 0
    },
    "statuses": {
      "active+clean": 145
    },
    "pgs_per_osd": 145
  },
  "mgr_map": {
    "active_name": "ceph-01.scvnwp",
    "standbys": [
      {
        "gid": 24910,
        "name": "ceph-03.upxmpf",
        "mgr_features": 4540701547738038300,
        "available_modules": [
          {
            "name": "alerts",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "interval": {
                "name": "interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "60",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "How frequently to reexamine health status",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_destination": {
                "name": "smtp_destination",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Email address to send alerts to",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_from_name": {
                "name": "smtp_from_name",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "Ceph",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Email From: name",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_host": {
                "name": "smtp_host",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "SMTP server",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_password": {
                "name": "smtp_password",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Password to authenticate with",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_port": {
                "name": "smtp_port",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "465",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "SMTP port",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_sender": {
                "name": "smtp_sender",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "SMTP envelope sender",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_ssl": {
                "name": "smtp_ssl",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Use SSL to connect to SMTP server",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_user": {
                "name": "smtp_user",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "User to authenticate as",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "balancer",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "active": {
                "name": "active",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "automatically balance PGs across cluster",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "begin_time": {
                "name": "begin_time",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "0000",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "beginning time of day to automatically balance",
                "long_desc": "This is a time of day in the format HHMM.",
                "tags": [],
                "see_also": []
              },
              "begin_weekday": {
                "name": "begin_weekday",
                "type": "uint",
                "level": "advanced",
                "flags": 1,
                "default_value": "0",
                "min": "0",
                "max": "6",
                "enum_allowed": [],
                "desc": "Restrict automatic balancing to this day of the week or later",
                "long_desc": "0 = Sunday, 1 = Monday, etc.",
                "tags": [],
                "see_also": []
              },
              "crush_compat_max_iterations": {
                "name": "crush_compat_max_iterations",
                "type": "uint",
                "level": "advanced",
                "flags": 1,
                "default_value": "25",
                "min": "1",
                "max": "250",
                "enum_allowed": [],
                "desc": "maximum number of iterations to attempt optimization",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "crush_compat_metrics": {
                "name": "crush_compat_metrics",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "pgs,objects,bytes",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "metrics with which to calculate OSD utilization",
                "long_desc": "Value is a list of one or more of \"pgs\", \"objects\", or \"bytes\", and indicates which metrics to use to balance utilization.",
                "tags": [],
                "see_also": []
              },
              "crush_compat_step": {
                "name": "crush_compat_step",
                "type": "float",
                "level": "advanced",
                "flags": 1,
                "default_value": "0.5",
                "min": "0.001",
                "max": "0.999",
                "enum_allowed": [],
                "desc": "aggressiveness of optimization",
                "long_desc": ".99 is very aggressive, .01 is less aggressive",
                "tags": [],
                "see_also": []
              },
              "end_time": {
                "name": "end_time",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "2359",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "ending time of day to automatically balance",
                "long_desc": "This is a time of day in the format HHMM.",
                "tags": [],
                "see_also": []
              },
              "end_weekday": {
                "name": "end_weekday",
                "type": "uint",
                "level": "advanced",
                "flags": 1,
                "default_value": "0",
                "min": "0",
                "max": "6",
                "enum_allowed": [],
                "desc": "Restrict automatic balancing to days of the week earlier than this",
                "long_desc": "0 = Sunday, 1 = Monday, etc.",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "min_score": {
                "name": "min_score",
                "type": "float",
                "level": "advanced",
                "flags": 1,
                "default_value": "0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "minimum score, below which no optimization is attempted",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "mode": {
                "name": "mode",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "upmap",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "crush-compat",
                  "none",
                  "read",
                  "upmap",
                  "upmap-read"
                ],
                "desc": "Balancer mode",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "pool_ids": {
                "name": "pool_ids",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "pools which the automatic balancing will be limited to",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "sleep_interval": {
                "name": "sleep_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "60",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how frequently to wake up and attempt optimization",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "update_pg_upmap_activity": {
                "name": "update_pg_upmap_activity",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Updates pg_upmap activity stats to be used in `balancer status detail`",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "upmap_max_deviation": {
                "name": "upmap_max_deviation",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "5",
                "min": "1",
                "max": "",
                "enum_allowed": [],
                "desc": "deviation below which no optimization is attempted",
                "long_desc": "If the number of PGs are within this count then no optimization is attempted",
                "tags": [],
                "see_also": []
              },
              "upmap_max_optimizations": {
                "name": "upmap_max_optimizations",
                "type": "uint",
                "level": "advanced",
                "flags": 1,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "maximum upmap optimizations to make per attempt",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "cephadm",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "agent_down_multiplier": {
                "name": "agent_down_multiplier",
                "type": "float",
                "level": "advanced",
                "flags": 0,
                "default_value": "3.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Multiplied by agent refresh rate to calculate how long agent must not report before being marked down",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "agent_refresh_rate": {
                "name": "agent_refresh_rate",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "20",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "How often agent on each host will try to gather and send metadata",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "agent_starting_port": {
                "name": "agent_starting_port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "4721",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "First port agent will try to bind to (will also try up to next 1000 subsequent ports if blocked)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "allow_ptrace": {
                "name": "allow_ptrace",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "allow SYS_PTRACE capability on ceph containers",
                "long_desc": "The SYS_PTRACE capability is needed to attach to a process with gdb or strace.  Enabling this options can allow debugging daemons that encounter problems at runtime.",
                "tags": [],
                "see_also": []
              },
              "autotune_interval": {
                "name": "autotune_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how frequently to autotune daemon memory",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "autotune_memory_target_ratio": {
                "name": "autotune_memory_target_ratio",
                "type": "float",
                "level": "advanced",
                "flags": 0,
                "default_value": "0.7",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "ratio of total system memory to divide amongst autotuned daemons",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "cephadm_log_destination": {
                "name": "cephadm_log_destination",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "file",
                  "file,syslog",
                  "syslog"
                ],
                "desc": "Destination for cephadm command's persistent logging",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "cgroups_split": {
                "name": "cgroups_split",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Pass --cgroups=split when cephadm creates containers (currently podman only)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "config_checks_enabled": {
                "name": "config_checks_enabled",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Enable or disable the cephadm configuration analysis",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "config_dashboard": {
                "name": "config_dashboard",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "manage configs like API endpoints in Dashboard.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_alertmanager": {
                "name": "container_image_alertmanager",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/prometheus/alertmanager:v0.25.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Prometheus container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_base": {
                "name": "container_image_base",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "quay.io/ceph/ceph",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Container image name, without the tag",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_elasticsearch": {
                "name": "container_image_elasticsearch",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/omrizeneva/elasticsearch:6.8.23",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "elasticsearch container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_grafana": {
                "name": "container_image_grafana",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/grafana:10.4.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Prometheus container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_haproxy": {
                "name": "container_image_haproxy",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/haproxy:2.3",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "HAproxy container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_jaeger_agent": {
                "name": "container_image_jaeger_agent",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/jaegertracing/jaeger-agent:1.29",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Jaeger agent container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_jaeger_collector": {
                "name": "container_image_jaeger_collector",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/jaegertracing/jaeger-collector:1.29",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Jaeger collector container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_jaeger_query": {
                "name": "container_image_jaeger_query",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/jaegertracing/jaeger-query:1.29",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Jaeger query container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_keepalived": {
                "name": "container_image_keepalived",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/keepalived:2.2.4",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Keepalived container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_loki": {
                "name": "container_image_loki",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/loki:3.0.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Loki container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_node_exporter": {
                "name": "container_image_node_exporter",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/prometheus/node-exporter:v1.7.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Prometheus container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_nvmeof": {
                "name": "container_image_nvmeof",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/nvmeof:1.2.5",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Nvme-of container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_prometheus": {
                "name": "container_image_prometheus",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/prometheus/prometheus:v2.51.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Prometheus container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_promtail": {
                "name": "container_image_promtail",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/promtail:3.0.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Promtail container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_samba": {
                "name": "container_image_samba",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/samba.org/samba-server:devbuilds-centos-amd64",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Samba/SMB container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_snmp_gateway": {
                "name": "container_image_snmp_gateway",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/snmp-notifier:v1.2.1",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "SNMP Gateway container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_init": {
                "name": "container_init",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Run podman/docker with `--init`",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "daemon_cache_timeout": {
                "name": "daemon_cache_timeout",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "seconds to cache service (daemon) inventory",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "default_cephadm_command_timeout": {
                "name": "default_cephadm_command_timeout",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "900",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Default timeout applied to cephadm commands run directly on the host (in seconds)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "default_registry": {
                "name": "default_registry",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Search-registry to which we should normalize unqualified image names. This is not the default registry",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "device_cache_timeout": {
                "name": "device_cache_timeout",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "1800",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "seconds to cache device inventory",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "device_enhanced_scan": {
                "name": "device_enhanced_scan",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Use libstoragemgmt during device scans",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "facts_cache_timeout": {
                "name": "facts_cache_timeout",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "60",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "seconds to cache host facts data",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "grafana_dashboards_path": {
                "name": "grafana_dashboards_path",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "/etc/grafana/dashboards/ceph-dashboard/",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "location of dashboards to include in grafana deployments",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "host_check_interval": {
                "name": "host_check_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how frequently to perform a host check",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "hw_monitoring": {
                "name": "hw_monitoring",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Deploy hw monitoring daemon on every host.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "inventory_list_all": {
                "name": "inventory_list_all",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Whether ceph-volume inventory should report more devices (mostly mappers (LVs / mpaths), partitions...)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_refresh_metadata": {
                "name": "log_refresh_metadata",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Log all refresh metadata. Includes daemon, device, and host info collected regularly. Only has effect if logging at debug level",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "log to the \"cephadm\" cluster log channel\"",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "manage_etc_ceph_ceph_conf": {
                "name": "manage_etc_ceph_ceph_conf",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Manage and own /etc/ceph/ceph.conf on the hosts.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "manage_etc_ceph_ceph_conf_hosts": {
                "name": "manage_etc_ceph_ceph_conf_hosts",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "*",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "PlacementSpec describing on which hosts to manage /etc/ceph/ceph.conf",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_count_per_host": {
                "name": "max_count_per_host",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "max number of daemons per service per host",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_osd_draining_count": {
                "name": "max_osd_draining_count",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "max number of osds that will be drained simultaneously when osds are removed",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "migration_current": {
                "name": "migration_current",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "internal - do not modify",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "mode": {
                "name": "mode",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "root",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "cephadm-package",
                  "root"
                ],
                "desc": "mode for remote execution of cephadm",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "oob_default_addr": {
                "name": "oob_default_addr",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "169.254.1.1",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Default address for RedFish API (oob management).",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "prometheus_alerts_path": {
                "name": "prometheus_alerts_path",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "/etc/prometheus/ceph/ceph_default_alerts.yml",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "location of alerts to include in prometheus deployments",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "registry_insecure": {
                "name": "registry_insecure",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Registry is to be considered insecure (no TLS available). Only for development purposes.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "registry_password": {
                "name": "registry_password",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Custom repository password. Only used for logging into a registry.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "registry_url": {
                "name": "registry_url",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Registry url for login purposes. This is not the default registry",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "registry_username": {
                "name": "registry_username",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Custom repository username. Only used for logging into a registry.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "secure_monitoring_stack": {
                "name": "secure_monitoring_stack",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Enable TLS security for all the monitoring stack daemons",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "service_discovery_port": {
                "name": "service_discovery_port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "8765",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "cephadm service discovery port",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssh_config_file": {
                "name": "ssh_config_file",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "customized SSH config file to connect to managed hosts",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssh_keepalive_count_max": {
                "name": "ssh_keepalive_count_max",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "3",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "How many times ssh connections can fail liveness checks before the host is marked offline",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssh_keepalive_interval": {
                "name": "ssh_keepalive_interval",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "7",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "How often ssh connections are checked for liveness",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "use_agent": {
                "name": "use_agent",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Use cephadm agent on each host to gather and send metadata",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "use_repo_digest": {
                "name": "use_repo_digest",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Automatically convert image tags to image digest. Make sure all daemons use the same image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "warn_on_failed_host_check": {
                "name": "warn_on_failed_host_check",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "raise a health warning if the host check fails",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "warn_on_stray_daemons": {
                "name": "warn_on_stray_daemons",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "raise a health warning if daemons are detected that are not managed by cephadm",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "warn_on_stray_hosts": {
                "name": "warn_on_stray_hosts",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "raise a health warning if daemons are detected on a host that is not managed by cephadm",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "crash",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "retain_interval": {
                "name": "retain_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "31536000",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how long to retain crashes before pruning them",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "warn_recent_interval": {
                "name": "warn_recent_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "1209600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "time interval in which to warn about recent crashes",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "dashboard",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "ACCOUNT_LOCKOUT_ATTEMPTS": {
                "name": "ACCOUNT_LOCKOUT_ATTEMPTS",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ALERTMANAGER_API_HOST": {
                "name": "ALERTMANAGER_API_HOST",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ALERTMANAGER_API_SSL_VERIFY": {
                "name": "ALERTMANAGER_API_SSL_VERIFY",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "AUDIT_API_ENABLED": {
                "name": "AUDIT_API_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "AUDIT_API_LOG_PAYLOAD": {
                "name": "AUDIT_API_LOG_PAYLOAD",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ENABLE_BROWSABLE_API": {
                "name": "ENABLE_BROWSABLE_API",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_CEPHFS": {
                "name": "FEATURE_TOGGLE_CEPHFS",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_DASHBOARD": {
                "name": "FEATURE_TOGGLE_DASHBOARD",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_ISCSI": {
                "name": "FEATURE_TOGGLE_ISCSI",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_MIRRORING": {
                "name": "FEATURE_TOGGLE_MIRRORING",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_NFS": {
                "name": "FEATURE_TOGGLE_NFS",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_RBD": {
                "name": "FEATURE_TOGGLE_RBD",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_RGW": {
                "name": "FEATURE_TOGGLE_RGW",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GANESHA_CLUSTERS_RADOS_POOL_NAMESPACE": {
                "name": "GANESHA_CLUSTERS_RADOS_POOL_NAMESPACE",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_API_PASSWORD": {
                "name": "GRAFANA_API_PASSWORD",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "admin",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_API_SSL_VERIFY": {
                "name": "GRAFANA_API_SSL_VERIFY",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_API_URL": {
                "name": "GRAFANA_API_URL",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_API_USERNAME": {
                "name": "GRAFANA_API_USERNAME",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "admin",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_FRONTEND_API_URL": {
                "name": "GRAFANA_FRONTEND_API_URL",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_UPDATE_DASHBOARDS": {
                "name": "GRAFANA_UPDATE_DASHBOARDS",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ISCSI_API_SSL_VERIFICATION": {
                "name": "ISCSI_API_SSL_VERIFICATION",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ISSUE_TRACKER_API_KEY": {
                "name": "ISSUE_TRACKER_API_KEY",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PROMETHEUS_API_HOST": {
                "name": "PROMETHEUS_API_HOST",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PROMETHEUS_API_SSL_VERIFY": {
                "name": "PROMETHEUS_API_SSL_VERIFY",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_COMPLEXITY_ENABLED": {
                "name": "PWD_POLICY_CHECK_COMPLEXITY_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_EXCLUSION_LIST_ENABLED": {
                "name": "PWD_POLICY_CHECK_EXCLUSION_LIST_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_LENGTH_ENABLED": {
                "name": "PWD_POLICY_CHECK_LENGTH_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_OLDPWD_ENABLED": {
                "name": "PWD_POLICY_CHECK_OLDPWD_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_REPETITIVE_CHARS_ENABLED": {
                "name": "PWD_POLICY_CHECK_REPETITIVE_CHARS_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_SEQUENTIAL_CHARS_ENABLED": {
                "name": "PWD_POLICY_CHECK_SEQUENTIAL_CHARS_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_USERNAME_ENABLED": {
                "name": "PWD_POLICY_CHECK_USERNAME_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_ENABLED": {
                "name": "PWD_POLICY_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_EXCLUSION_LIST": {
                "name": "PWD_POLICY_EXCLUSION_LIST",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "osd,host,dashboard,pool,block,nfs,ceph,monitors,gateway,logs,crush,maps",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_MIN_COMPLEXITY": {
                "name": "PWD_POLICY_MIN_COMPLEXITY",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_MIN_LENGTH": {
                "name": "PWD_POLICY_MIN_LENGTH",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "8",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "REST_REQUESTS_TIMEOUT": {
                "name": "REST_REQUESTS_TIMEOUT",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "45",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "RGW_API_ACCESS_KEY": {
                "name": "RGW_API_ACCESS_KEY",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "RGW_API_ADMIN_RESOURCE": {
                "name": "RGW_API_ADMIN_RESOURCE",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "admin",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "RGW_API_SECRET_KEY": {
                "name": "RGW_API_SECRET_KEY",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "RGW_API_SSL_VERIFY": {
                "name": "RGW_API_SSL_VERIFY",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "USER_PWD_EXPIRATION_SPAN": {
                "name": "USER_PWD_EXPIRATION_SPAN",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "USER_PWD_EXPIRATION_WARNING_1": {
                "name": "USER_PWD_EXPIRATION_WARNING_1",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "USER_PWD_EXPIRATION_WARNING_2": {
                "name": "USER_PWD_EXPIRATION_WARNING_2",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "5",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "cross_origin_url": {
                "name": "cross_origin_url",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "crt_file": {
                "name": "crt_file",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "debug": {
                "name": "debug",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Enable/disable debug options",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "jwt_token_ttl": {
                "name": "jwt_token_ttl",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "28800",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "key_file": {
                "name": "key_file",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "motd": {
                "name": "motd",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "The message of the day",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "redirect_resolve_ip_addr": {
                "name": "redirect_resolve_ip_addr",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_addr": {
                "name": "server_addr",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "::",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_port": {
                "name": "server_port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "8080",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssl": {
                "name": "ssl",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssl_server_port": {
                "name": "ssl_server_port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "8443",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "standby_behaviour": {
                "name": "standby_behaviour",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "redirect",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "error",
                  "redirect"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "standby_error_status_code": {
                "name": "standby_error_status_code",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "500",
                "min": "400",
                "max": "599",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "url_prefix": {
                "name": "url_prefix",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "devicehealth",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "enable_monitoring": {
                "name": "enable_monitoring",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "monitor device health metrics",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "mark_out_threshold": {
                "name": "mark_out_threshold",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "2419200",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "automatically mark OSD if it may fail before this long",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "pool_name": {
                "name": "pool_name",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "device_health_metrics",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "name of pool in which to store device health metrics",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "retention_period": {
                "name": "retention_period",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "15552000",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how long to retain device health metrics",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "scrape_frequency": {
                "name": "scrape_frequency",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "86400",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how frequently to scrape device health metrics",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "self_heal": {
                "name": "self_heal",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "preemptively heal cluster around devices that may fail",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "sleep_interval": {
                "name": "sleep_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how frequently to wake up and check device health",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "warn_threshold": {
                "name": "warn_threshold",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "7257600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "raise health warning if OSD may fail before this long",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "diskprediction_local",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "predict_interval": {
                "name": "predict_interval",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "86400",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "predictor_model": {
                "name": "predictor_model",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "prophetstor",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "sleep_interval": {
                "name": "sleep_interval",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "influx",
            "can_run": false,
            "error_string": "influxdb python module not found",
            "module_options": {
              "batch_size": {
                "name": "batch_size",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "5000",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "How big batches of data points should be when sending to InfluxDB.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "database": {
                "name": "database",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "ceph",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "InfluxDB database name. You will need to create this database and grant write privileges to the configured username or the username must have admin privileges to create it.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "hostname": {
                "name": "hostname",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "InfluxDB server hostname",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "interval": {
                "name": "interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "30",
                "min": "5",
                "max": "",
                "enum_allowed": [],
                "desc": "Time between reports to InfluxDB.  Default 30 seconds.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "password": {
                "name": "password",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "password of InfluxDB server user",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "port": {
                "name": "port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "8086",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "InfluxDB server port",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssl": {
                "name": "ssl",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "false",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Use https connection for InfluxDB server. Use \"true\" or \"false\".",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "threads": {
                "name": "threads",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "5",
                "min": "1",
                "max": "32",
                "enum_allowed": [],
                "desc": "How many worker threads should be spawned for sending data to InfluxDB.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "username": {
                "name": "username",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "username of InfluxDB server user",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "verify_ssl": {
                "name": "verify_ssl",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "true",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Verify https cert for InfluxDB server. Use \"true\" or \"false\".",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "insights",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "iostat",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "k8sevents",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "ceph_event_retention_days": {
                "name": "ceph_event_retention_days",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "7",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Days to hold ceph event information within local cache",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "config_check_secs": {
                "name": "config_check_secs",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "10",
                "max": "",
                "enum_allowed": [],
                "desc": "interval (secs) to check for cluster configuration changes",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "localpool",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "failure_domain": {
                "name": "failure_domain",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "host",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "failure domain for any created local pool",
                "long_desc": "what failure domain we should separate data replicas across.",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "min_size": {
                "name": "min_size",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "default min_size for any created local pool",
                "long_desc": "value to set min_size to (unchanged from Ceph's default if this option is not set)",
                "tags": [],
                "see_also": []
              },
              "num_rep": {
                "name": "num_rep",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "3",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "default replica count for any created local pool",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "pg_num": {
                "name": "pg_num",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "128",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "default pg_num for any created local pool",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "prefix": {
                "name": "prefix",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "name prefix for any created local pool",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "subtree": {
                "name": "subtree",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "rack",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "CRUSH level for which to create a local pool",
                "long_desc": "which CRUSH subtree type the module should create a pool for.",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "mds_autoscaler",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "mirroring",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "nfs",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "orchestrator",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "fail_fs": {
                "name": "fail_fs",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Fail filesystem for rapid multi-rank mds upgrade",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "orchestrator": {
                "name": "orchestrator",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "cephadm",
                  "rook",
                  "test_orchestrator"
                ],
                "desc": "Orchestrator backend",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "osd_perf_query",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "osd_support",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "pg_autoscaler",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "sleep_interval": {
                "name": "sleep_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "60",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "threshold": {
                "name": "threshold",
                "type": "float",
                "level": "advanced",
                "flags": 0,
                "default_value": "3.0",
                "min": "1.0",
                "max": "",
                "enum_allowed": [],
                "desc": "scaling threshold",
                "long_desc": "The factor by which the `NEW PG_NUM` must vary from the current`PG_NUM` before being accepted. Cannot be less than 1.0",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "progress",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "allow_pg_recovery_event": {
                "name": "allow_pg_recovery_event",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "allow the module to show pg recovery progress",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "enabled": {
                "name": "enabled",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_completed_events": {
                "name": "max_completed_events",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "50",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "number of past completed events to remember",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "sleep_interval": {
                "name": "sleep_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "5",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how long the module is going to sleep",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "prometheus",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "cache": {
                "name": "cache",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "exclude_perf_counters": {
                "name": "exclude_perf_counters",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Do not include perf-counters in the metrics output",
                "long_desc": "Gathering perf-counters from a single Prometheus exporter can degrade ceph-mgr performance, especially in large clusters. Instead, Ceph-exporter daemons are now used by default for perf-counter gathering. This should only be disabled when no ceph-exporters are deployed.",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rbd_stats_pools": {
                "name": "rbd_stats_pools",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rbd_stats_pools_refresh_interval": {
                "name": "rbd_stats_pools_refresh_interval",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "300",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "scrape_interval": {
                "name": "scrape_interval",
                "type": "float",
                "level": "advanced",
                "flags": 0,
                "default_value": "15.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_addr": {
                "name": "server_addr",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "::",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "the IPv4 or IPv6 address on which the module listens for HTTP requests",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_port": {
                "name": "server_port",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "9283",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "the port on which the module listens for HTTP requests",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "stale_cache_strategy": {
                "name": "stale_cache_strategy",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "log",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "standby_behaviour": {
                "name": "standby_behaviour",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "default",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "default",
                  "error"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "standby_error_status_code": {
                "name": "standby_error_status_code",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "500",
                "min": "400",
                "max": "599",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "rbd_support",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_concurrent_snap_create": {
                "name": "max_concurrent_snap_create",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "mirror_snapshot_schedule": {
                "name": "mirror_snapshot_schedule",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "trash_purge_schedule": {
                "name": "trash_purge_schedule",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "restful",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "enable_auth": {
                "name": "enable_auth",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "key_file": {
                "name": "key_file",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_requests": {
                "name": "max_requests",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "500",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Maximum number of requests to keep in memory. When new request comes in, the oldest request will be removed if the number of requests exceeds the max request number. if un-finished request is removed, error message will be logged in the ceph-mgr log.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_addr": {
                "name": "server_addr",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_port": {
                "name": "server_port",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "rgw",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "secondary_zone_period_retry_limit": {
                "name": "secondary_zone_period_retry_limit",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "5",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "RGW module period update retry limit for secondary site",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "rook",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "storage_class": {
                "name": "storage_class",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "local",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "storage class name for LSO-discovered PVs",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "selftest",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "roption1": {
                "name": "roption1",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "roption2": {
                "name": "roption2",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "xyz",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption1": {
                "name": "rwoption1",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption2": {
                "name": "rwoption2",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption3": {
                "name": "rwoption3",
                "type": "float",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption4": {
                "name": "rwoption4",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption5": {
                "name": "rwoption5",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption6": {
                "name": "rwoption6",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption7": {
                "name": "rwoption7",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "1",
                "max": "42",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "testkey": {
                "name": "testkey",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "testlkey": {
                "name": "testlkey",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "testnewline": {
                "name": "testnewline",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "snap_schedule",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "allow_m_granularity": {
                "name": "allow_m_granularity",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "allow minute scheduled snapshots",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "dump_on_update": {
                "name": "dump_on_update",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "dump database to debug log on update",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "stats",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "status",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "telegraf",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "address": {
                "name": "address",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "unixgram:///tmp/telegraf.sock",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "interval": {
                "name": "interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "15",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "telemetry",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "channel_basic": {
                "name": "channel_basic",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Share basic cluster information (size, version)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "channel_crash": {
                "name": "channel_crash",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Share metadata about Ceph daemon crashes (version, stack straces, etc)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "channel_device": {
                "name": "channel_device",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Share device health metrics (e.g., SMART data, minus potentially identifying info like serial numbers)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "channel_ident": {
                "name": "channel_ident",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Share a user-provided description and/or contact email for the cluster",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "channel_perf": {
                "name": "channel_perf",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Share various performance metrics of a cluster",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "contact": {
                "name": "contact",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "description": {
                "name": "description",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "device_url": {
                "name": "device_url",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "https://telemetry.ceph.com/device",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "enabled": {
                "name": "enabled",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "interval": {
                "name": "interval",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "24",
                "min": "8",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "last_opt_revision": {
                "name": "last_opt_revision",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "1",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "leaderboard": {
                "name": "leaderboard",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "leaderboard_description": {
                "name": "leaderboard_description",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "organization": {
                "name": "organization",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "proxy": {
                "name": "proxy",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "url": {
                "name": "url",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "https://telemetry.ceph.com/report",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "test_orchestrator",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "volumes",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_concurrent_clones": {
                "name": "max_concurrent_clones",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "4",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Number of asynchronous cloner threads",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "periodic_async_work": {
                "name": "periodic_async_work",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Periodically check for async work",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "snapshot_clone_delay": {
                "name": "snapshot_clone_delay",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Delay clone begin operation by snapshot_clone_delay seconds",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "snapshot_clone_no_wait": {
                "name": "snapshot_clone_no_wait",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Reject subvolume clone request when cloner threads are busy",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "zabbix",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "discovery_interval": {
                "name": "discovery_interval",
                "type": "uint",
                "level": "advanced",
                "flags": 0,
                "default_value": "100",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "identifier": {
                "name": "identifier",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "interval": {
                "name": "interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "60",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "zabbix_host": {
                "name": "zabbix_host",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "zabbix_port": {
                "name": "zabbix_port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10051",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "zabbix_sender": {
                "name": "zabbix_sender",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "/usr/bin/zabbix_sender",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          }
        ]
      },
      {
        "gid": 54116,
        "name": "ceph-02.nrnqol",
        "mgr_features": 4540701547738038300,
        "available_modules": [
          {
            "name": "alerts",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "interval": {
                "name": "interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "60",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "How frequently to reexamine health status",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_destination": {
                "name": "smtp_destination",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Email address to send alerts to",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_from_name": {
                "name": "smtp_from_name",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "Ceph",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Email From: name",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_host": {
                "name": "smtp_host",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "SMTP server",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_password": {
                "name": "smtp_password",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Password to authenticate with",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_port": {
                "name": "smtp_port",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "465",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "SMTP port",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_sender": {
                "name": "smtp_sender",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "SMTP envelope sender",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_ssl": {
                "name": "smtp_ssl",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Use SSL to connect to SMTP server",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "smtp_user": {
                "name": "smtp_user",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "User to authenticate as",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "balancer",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "active": {
                "name": "active",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "automatically balance PGs across cluster",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "begin_time": {
                "name": "begin_time",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "0000",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "beginning time of day to automatically balance",
                "long_desc": "This is a time of day in the format HHMM.",
                "tags": [],
                "see_also": []
              },
              "begin_weekday": {
                "name": "begin_weekday",
                "type": "uint",
                "level": "advanced",
                "flags": 1,
                "default_value": "0",
                "min": "0",
                "max": "6",
                "enum_allowed": [],
                "desc": "Restrict automatic balancing to this day of the week or later",
                "long_desc": "0 = Sunday, 1 = Monday, etc.",
                "tags": [],
                "see_also": []
              },
              "crush_compat_max_iterations": {
                "name": "crush_compat_max_iterations",
                "type": "uint",
                "level": "advanced",
                "flags": 1,
                "default_value": "25",
                "min": "1",
                "max": "250",
                "enum_allowed": [],
                "desc": "maximum number of iterations to attempt optimization",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "crush_compat_metrics": {
                "name": "crush_compat_metrics",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "pgs,objects,bytes",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "metrics with which to calculate OSD utilization",
                "long_desc": "Value is a list of one or more of \"pgs\", \"objects\", or \"bytes\", and indicates which metrics to use to balance utilization.",
                "tags": [],
                "see_also": []
              },
              "crush_compat_step": {
                "name": "crush_compat_step",
                "type": "float",
                "level": "advanced",
                "flags": 1,
                "default_value": "0.5",
                "min": "0.001",
                "max": "0.999",
                "enum_allowed": [],
                "desc": "aggressiveness of optimization",
                "long_desc": ".99 is very aggressive, .01 is less aggressive",
                "tags": [],
                "see_also": []
              },
              "end_time": {
                "name": "end_time",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "2359",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "ending time of day to automatically balance",
                "long_desc": "This is a time of day in the format HHMM.",
                "tags": [],
                "see_also": []
              },
              "end_weekday": {
                "name": "end_weekday",
                "type": "uint",
                "level": "advanced",
                "flags": 1,
                "default_value": "0",
                "min": "0",
                "max": "6",
                "enum_allowed": [],
                "desc": "Restrict automatic balancing to days of the week earlier than this",
                "long_desc": "0 = Sunday, 1 = Monday, etc.",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "min_score": {
                "name": "min_score",
                "type": "float",
                "level": "advanced",
                "flags": 1,
                "default_value": "0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "minimum score, below which no optimization is attempted",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "mode": {
                "name": "mode",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "upmap",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "crush-compat",
                  "none",
                  "read",
                  "upmap",
                  "upmap-read"
                ],
                "desc": "Balancer mode",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "pool_ids": {
                "name": "pool_ids",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "pools which the automatic balancing will be limited to",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "sleep_interval": {
                "name": "sleep_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "60",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how frequently to wake up and attempt optimization",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "update_pg_upmap_activity": {
                "name": "update_pg_upmap_activity",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Updates pg_upmap activity stats to be used in `balancer status detail`",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "upmap_max_deviation": {
                "name": "upmap_max_deviation",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "5",
                "min": "1",
                "max": "",
                "enum_allowed": [],
                "desc": "deviation below which no optimization is attempted",
                "long_desc": "If the number of PGs are within this count then no optimization is attempted",
                "tags": [],
                "see_also": []
              },
              "upmap_max_optimizations": {
                "name": "upmap_max_optimizations",
                "type": "uint",
                "level": "advanced",
                "flags": 1,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "maximum upmap optimizations to make per attempt",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "cephadm",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "agent_down_multiplier": {
                "name": "agent_down_multiplier",
                "type": "float",
                "level": "advanced",
                "flags": 0,
                "default_value": "3.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Multiplied by agent refresh rate to calculate how long agent must not report before being marked down",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "agent_refresh_rate": {
                "name": "agent_refresh_rate",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "20",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "How often agent on each host will try to gather and send metadata",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "agent_starting_port": {
                "name": "agent_starting_port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "4721",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "First port agent will try to bind to (will also try up to next 1000 subsequent ports if blocked)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "allow_ptrace": {
                "name": "allow_ptrace",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "allow SYS_PTRACE capability on ceph containers",
                "long_desc": "The SYS_PTRACE capability is needed to attach to a process with gdb or strace.  Enabling this options can allow debugging daemons that encounter problems at runtime.",
                "tags": [],
                "see_also": []
              },
              "autotune_interval": {
                "name": "autotune_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how frequently to autotune daemon memory",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "autotune_memory_target_ratio": {
                "name": "autotune_memory_target_ratio",
                "type": "float",
                "level": "advanced",
                "flags": 0,
                "default_value": "0.7",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "ratio of total system memory to divide amongst autotuned daemons",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "cephadm_log_destination": {
                "name": "cephadm_log_destination",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "file",
                  "file,syslog",
                  "syslog"
                ],
                "desc": "Destination for cephadm command's persistent logging",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "cgroups_split": {
                "name": "cgroups_split",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Pass --cgroups=split when cephadm creates containers (currently podman only)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "config_checks_enabled": {
                "name": "config_checks_enabled",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Enable or disable the cephadm configuration analysis",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "config_dashboard": {
                "name": "config_dashboard",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "manage configs like API endpoints in Dashboard.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_alertmanager": {
                "name": "container_image_alertmanager",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/prometheus/alertmanager:v0.25.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Prometheus container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_base": {
                "name": "container_image_base",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "quay.io/ceph/ceph",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Container image name, without the tag",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_elasticsearch": {
                "name": "container_image_elasticsearch",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/omrizeneva/elasticsearch:6.8.23",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "elasticsearch container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_grafana": {
                "name": "container_image_grafana",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/grafana:10.4.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Prometheus container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_haproxy": {
                "name": "container_image_haproxy",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/haproxy:2.3",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "HAproxy container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_jaeger_agent": {
                "name": "container_image_jaeger_agent",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/jaegertracing/jaeger-agent:1.29",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Jaeger agent container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_jaeger_collector": {
                "name": "container_image_jaeger_collector",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/jaegertracing/jaeger-collector:1.29",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Jaeger collector container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_jaeger_query": {
                "name": "container_image_jaeger_query",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/jaegertracing/jaeger-query:1.29",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Jaeger query container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_keepalived": {
                "name": "container_image_keepalived",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/keepalived:2.2.4",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Keepalived container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_loki": {
                "name": "container_image_loki",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/loki:3.0.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Loki container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_node_exporter": {
                "name": "container_image_node_exporter",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/prometheus/node-exporter:v1.7.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Prometheus container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_nvmeof": {
                "name": "container_image_nvmeof",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/nvmeof:1.2.5",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Nvme-of container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_prometheus": {
                "name": "container_image_prometheus",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/prometheus/prometheus:v2.51.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Prometheus container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_promtail": {
                "name": "container_image_promtail",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/promtail:3.0.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Promtail container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_samba": {
                "name": "container_image_samba",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/samba.org/samba-server:devbuilds-centos-amd64",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Samba/SMB container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_image_snmp_gateway": {
                "name": "container_image_snmp_gateway",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io/ceph/snmp-notifier:v1.2.1",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "SNMP Gateway container image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "container_init": {
                "name": "container_init",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Run podman/docker with `--init`",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "daemon_cache_timeout": {
                "name": "daemon_cache_timeout",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "seconds to cache service (daemon) inventory",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "default_cephadm_command_timeout": {
                "name": "default_cephadm_command_timeout",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "900",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Default timeout applied to cephadm commands run directly on the host (in seconds)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "default_registry": {
                "name": "default_registry",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "quay.io",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Search-registry to which we should normalize unqualified image names. This is not the default registry",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "device_cache_timeout": {
                "name": "device_cache_timeout",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "1800",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "seconds to cache device inventory",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "device_enhanced_scan": {
                "name": "device_enhanced_scan",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Use libstoragemgmt during device scans",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "facts_cache_timeout": {
                "name": "facts_cache_timeout",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "60",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "seconds to cache host facts data",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "grafana_dashboards_path": {
                "name": "grafana_dashboards_path",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "/etc/grafana/dashboards/ceph-dashboard/",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "location of dashboards to include in grafana deployments",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "host_check_interval": {
                "name": "host_check_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how frequently to perform a host check",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "hw_monitoring": {
                "name": "hw_monitoring",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Deploy hw monitoring daemon on every host.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "inventory_list_all": {
                "name": "inventory_list_all",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Whether ceph-volume inventory should report more devices (mostly mappers (LVs / mpaths), partitions...)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_refresh_metadata": {
                "name": "log_refresh_metadata",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Log all refresh metadata. Includes daemon, device, and host info collected regularly. Only has effect if logging at debug level",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "log to the \"cephadm\" cluster log channel\"",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "manage_etc_ceph_ceph_conf": {
                "name": "manage_etc_ceph_ceph_conf",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Manage and own /etc/ceph/ceph.conf on the hosts.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "manage_etc_ceph_ceph_conf_hosts": {
                "name": "manage_etc_ceph_ceph_conf_hosts",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "*",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "PlacementSpec describing on which hosts to manage /etc/ceph/ceph.conf",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_count_per_host": {
                "name": "max_count_per_host",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "max number of daemons per service per host",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_osd_draining_count": {
                "name": "max_osd_draining_count",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "max number of osds that will be drained simultaneously when osds are removed",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "migration_current": {
                "name": "migration_current",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "internal - do not modify",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "mode": {
                "name": "mode",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "root",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "cephadm-package",
                  "root"
                ],
                "desc": "mode for remote execution of cephadm",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "oob_default_addr": {
                "name": "oob_default_addr",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "169.254.1.1",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Default address for RedFish API (oob management).",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "prometheus_alerts_path": {
                "name": "prometheus_alerts_path",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "/etc/prometheus/ceph/ceph_default_alerts.yml",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "location of alerts to include in prometheus deployments",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "registry_insecure": {
                "name": "registry_insecure",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Registry is to be considered insecure (no TLS available). Only for development purposes.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "registry_password": {
                "name": "registry_password",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Custom repository password. Only used for logging into a registry.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "registry_url": {
                "name": "registry_url",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Registry url for login purposes. This is not the default registry",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "registry_username": {
                "name": "registry_username",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Custom repository username. Only used for logging into a registry.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "secure_monitoring_stack": {
                "name": "secure_monitoring_stack",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Enable TLS security for all the monitoring stack daemons",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "service_discovery_port": {
                "name": "service_discovery_port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "8765",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "cephadm service discovery port",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssh_config_file": {
                "name": "ssh_config_file",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "customized SSH config file to connect to managed hosts",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssh_keepalive_count_max": {
                "name": "ssh_keepalive_count_max",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "3",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "How many times ssh connections can fail liveness checks before the host is marked offline",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssh_keepalive_interval": {
                "name": "ssh_keepalive_interval",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "7",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "How often ssh connections are checked for liveness",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "use_agent": {
                "name": "use_agent",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Use cephadm agent on each host to gather and send metadata",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "use_repo_digest": {
                "name": "use_repo_digest",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Automatically convert image tags to image digest. Make sure all daemons use the same image",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "warn_on_failed_host_check": {
                "name": "warn_on_failed_host_check",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "raise a health warning if the host check fails",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "warn_on_stray_daemons": {
                "name": "warn_on_stray_daemons",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "raise a health warning if daemons are detected that are not managed by cephadm",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "warn_on_stray_hosts": {
                "name": "warn_on_stray_hosts",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "raise a health warning if daemons are detected on a host that is not managed by cephadm",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "crash",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "retain_interval": {
                "name": "retain_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "31536000",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how long to retain crashes before pruning them",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "warn_recent_interval": {
                "name": "warn_recent_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "1209600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "time interval in which to warn about recent crashes",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "dashboard",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "ACCOUNT_LOCKOUT_ATTEMPTS": {
                "name": "ACCOUNT_LOCKOUT_ATTEMPTS",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ALERTMANAGER_API_HOST": {
                "name": "ALERTMANAGER_API_HOST",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ALERTMANAGER_API_SSL_VERIFY": {
                "name": "ALERTMANAGER_API_SSL_VERIFY",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "AUDIT_API_ENABLED": {
                "name": "AUDIT_API_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "AUDIT_API_LOG_PAYLOAD": {
                "name": "AUDIT_API_LOG_PAYLOAD",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ENABLE_BROWSABLE_API": {
                "name": "ENABLE_BROWSABLE_API",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_CEPHFS": {
                "name": "FEATURE_TOGGLE_CEPHFS",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_DASHBOARD": {
                "name": "FEATURE_TOGGLE_DASHBOARD",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_ISCSI": {
                "name": "FEATURE_TOGGLE_ISCSI",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_MIRRORING": {
                "name": "FEATURE_TOGGLE_MIRRORING",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_NFS": {
                "name": "FEATURE_TOGGLE_NFS",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_RBD": {
                "name": "FEATURE_TOGGLE_RBD",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "FEATURE_TOGGLE_RGW": {
                "name": "FEATURE_TOGGLE_RGW",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GANESHA_CLUSTERS_RADOS_POOL_NAMESPACE": {
                "name": "GANESHA_CLUSTERS_RADOS_POOL_NAMESPACE",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_API_PASSWORD": {
                "name": "GRAFANA_API_PASSWORD",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "admin",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_API_SSL_VERIFY": {
                "name": "GRAFANA_API_SSL_VERIFY",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_API_URL": {
                "name": "GRAFANA_API_URL",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_API_USERNAME": {
                "name": "GRAFANA_API_USERNAME",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "admin",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_FRONTEND_API_URL": {
                "name": "GRAFANA_FRONTEND_API_URL",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "GRAFANA_UPDATE_DASHBOARDS": {
                "name": "GRAFANA_UPDATE_DASHBOARDS",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ISCSI_API_SSL_VERIFICATION": {
                "name": "ISCSI_API_SSL_VERIFICATION",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ISSUE_TRACKER_API_KEY": {
                "name": "ISSUE_TRACKER_API_KEY",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PROMETHEUS_API_HOST": {
                "name": "PROMETHEUS_API_HOST",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PROMETHEUS_API_SSL_VERIFY": {
                "name": "PROMETHEUS_API_SSL_VERIFY",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_COMPLEXITY_ENABLED": {
                "name": "PWD_POLICY_CHECK_COMPLEXITY_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_EXCLUSION_LIST_ENABLED": {
                "name": "PWD_POLICY_CHECK_EXCLUSION_LIST_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_LENGTH_ENABLED": {
                "name": "PWD_POLICY_CHECK_LENGTH_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_OLDPWD_ENABLED": {
                "name": "PWD_POLICY_CHECK_OLDPWD_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_REPETITIVE_CHARS_ENABLED": {
                "name": "PWD_POLICY_CHECK_REPETITIVE_CHARS_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_SEQUENTIAL_CHARS_ENABLED": {
                "name": "PWD_POLICY_CHECK_SEQUENTIAL_CHARS_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_CHECK_USERNAME_ENABLED": {
                "name": "PWD_POLICY_CHECK_USERNAME_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_ENABLED": {
                "name": "PWD_POLICY_ENABLED",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_EXCLUSION_LIST": {
                "name": "PWD_POLICY_EXCLUSION_LIST",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "osd,host,dashboard,pool,block,nfs,ceph,monitors,gateway,logs,crush,maps",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_MIN_COMPLEXITY": {
                "name": "PWD_POLICY_MIN_COMPLEXITY",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "PWD_POLICY_MIN_LENGTH": {
                "name": "PWD_POLICY_MIN_LENGTH",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "8",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "REST_REQUESTS_TIMEOUT": {
                "name": "REST_REQUESTS_TIMEOUT",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "45",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "RGW_API_ACCESS_KEY": {
                "name": "RGW_API_ACCESS_KEY",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "RGW_API_ADMIN_RESOURCE": {
                "name": "RGW_API_ADMIN_RESOURCE",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "admin",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "RGW_API_SECRET_KEY": {
                "name": "RGW_API_SECRET_KEY",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "RGW_API_SSL_VERIFY": {
                "name": "RGW_API_SSL_VERIFY",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "USER_PWD_EXPIRATION_SPAN": {
                "name": "USER_PWD_EXPIRATION_SPAN",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "USER_PWD_EXPIRATION_WARNING_1": {
                "name": "USER_PWD_EXPIRATION_WARNING_1",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "USER_PWD_EXPIRATION_WARNING_2": {
                "name": "USER_PWD_EXPIRATION_WARNING_2",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "5",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "cross_origin_url": {
                "name": "cross_origin_url",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "crt_file": {
                "name": "crt_file",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "debug": {
                "name": "debug",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Enable/disable debug options",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "jwt_token_ttl": {
                "name": "jwt_token_ttl",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "28800",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "key_file": {
                "name": "key_file",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "motd": {
                "name": "motd",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "The message of the day",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "redirect_resolve_ip_addr": {
                "name": "redirect_resolve_ip_addr",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_addr": {
                "name": "server_addr",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "::",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_port": {
                "name": "server_port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "8080",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssl": {
                "name": "ssl",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssl_server_port": {
                "name": "ssl_server_port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "8443",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "standby_behaviour": {
                "name": "standby_behaviour",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "redirect",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "error",
                  "redirect"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "standby_error_status_code": {
                "name": "standby_error_status_code",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "500",
                "min": "400",
                "max": "599",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "url_prefix": {
                "name": "url_prefix",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "devicehealth",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "enable_monitoring": {
                "name": "enable_monitoring",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "monitor device health metrics",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "mark_out_threshold": {
                "name": "mark_out_threshold",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "2419200",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "automatically mark OSD if it may fail before this long",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "pool_name": {
                "name": "pool_name",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "device_health_metrics",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "name of pool in which to store device health metrics",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "retention_period": {
                "name": "retention_period",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "15552000",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how long to retain device health metrics",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "scrape_frequency": {
                "name": "scrape_frequency",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "86400",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how frequently to scrape device health metrics",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "self_heal": {
                "name": "self_heal",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "preemptively heal cluster around devices that may fail",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "sleep_interval": {
                "name": "sleep_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how frequently to wake up and check device health",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "warn_threshold": {
                "name": "warn_threshold",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "7257600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "raise health warning if OSD may fail before this long",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "diskprediction_local",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "predict_interval": {
                "name": "predict_interval",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "86400",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "predictor_model": {
                "name": "predictor_model",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "prophetstor",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "sleep_interval": {
                "name": "sleep_interval",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "600",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "influx",
            "can_run": false,
            "error_string": "influxdb python module not found",
            "module_options": {
              "batch_size": {
                "name": "batch_size",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "5000",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "How big batches of data points should be when sending to InfluxDB.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "database": {
                "name": "database",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "ceph",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "InfluxDB database name. You will need to create this database and grant write privileges to the configured username or the username must have admin privileges to create it.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "hostname": {
                "name": "hostname",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "InfluxDB server hostname",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "interval": {
                "name": "interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "30",
                "min": "5",
                "max": "",
                "enum_allowed": [],
                "desc": "Time between reports to InfluxDB.  Default 30 seconds.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "password": {
                "name": "password",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "password of InfluxDB server user",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "port": {
                "name": "port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "8086",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "InfluxDB server port",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "ssl": {
                "name": "ssl",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "false",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Use https connection for InfluxDB server. Use \"true\" or \"false\".",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "threads": {
                "name": "threads",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "5",
                "min": "1",
                "max": "32",
                "enum_allowed": [],
                "desc": "How many worker threads should be spawned for sending data to InfluxDB.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "username": {
                "name": "username",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "username of InfluxDB server user",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "verify_ssl": {
                "name": "verify_ssl",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "true",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Verify https cert for InfluxDB server. Use \"true\" or \"false\".",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "insights",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "iostat",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "k8sevents",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "ceph_event_retention_days": {
                "name": "ceph_event_retention_days",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "7",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Days to hold ceph event information within local cache",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "config_check_secs": {
                "name": "config_check_secs",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "10",
                "max": "",
                "enum_allowed": [],
                "desc": "interval (secs) to check for cluster configuration changes",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "localpool",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "failure_domain": {
                "name": "failure_domain",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "host",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "failure domain for any created local pool",
                "long_desc": "what failure domain we should separate data replicas across.",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "min_size": {
                "name": "min_size",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "default min_size for any created local pool",
                "long_desc": "value to set min_size to (unchanged from Ceph's default if this option is not set)",
                "tags": [],
                "see_also": []
              },
              "num_rep": {
                "name": "num_rep",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "3",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "default replica count for any created local pool",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "pg_num": {
                "name": "pg_num",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "128",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "default pg_num for any created local pool",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "prefix": {
                "name": "prefix",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "name prefix for any created local pool",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "subtree": {
                "name": "subtree",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "rack",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "CRUSH level for which to create a local pool",
                "long_desc": "which CRUSH subtree type the module should create a pool for.",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "mds_autoscaler",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "mirroring",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "nfs",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "orchestrator",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "fail_fs": {
                "name": "fail_fs",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Fail filesystem for rapid multi-rank mds upgrade",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "orchestrator": {
                "name": "orchestrator",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "cephadm",
                  "rook",
                  "test_orchestrator"
                ],
                "desc": "Orchestrator backend",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "osd_perf_query",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "osd_support",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "pg_autoscaler",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "sleep_interval": {
                "name": "sleep_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "60",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "threshold": {
                "name": "threshold",
                "type": "float",
                "level": "advanced",
                "flags": 0,
                "default_value": "3.0",
                "min": "1.0",
                "max": "",
                "enum_allowed": [],
                "desc": "scaling threshold",
                "long_desc": "The factor by which the `NEW PG_NUM` must vary from the current`PG_NUM` before being accepted. Cannot be less than 1.0",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "progress",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "allow_pg_recovery_event": {
                "name": "allow_pg_recovery_event",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "allow the module to show pg recovery progress",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "enabled": {
                "name": "enabled",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_completed_events": {
                "name": "max_completed_events",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "50",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "number of past completed events to remember",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "sleep_interval": {
                "name": "sleep_interval",
                "type": "secs",
                "level": "advanced",
                "flags": 1,
                "default_value": "5",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "how long the module is going to sleep",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "prometheus",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "cache": {
                "name": "cache",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "exclude_perf_counters": {
                "name": "exclude_perf_counters",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Do not include perf-counters in the metrics output",
                "long_desc": "Gathering perf-counters from a single Prometheus exporter can degrade ceph-mgr performance, especially in large clusters. Instead, Ceph-exporter daemons are now used by default for perf-counter gathering. This should only be disabled when no ceph-exporters are deployed.",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rbd_stats_pools": {
                "name": "rbd_stats_pools",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rbd_stats_pools_refresh_interval": {
                "name": "rbd_stats_pools_refresh_interval",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "300",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "scrape_interval": {
                "name": "scrape_interval",
                "type": "float",
                "level": "advanced",
                "flags": 0,
                "default_value": "15.0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_addr": {
                "name": "server_addr",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "::",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "the IPv4 or IPv6 address on which the module listens for HTTP requests",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_port": {
                "name": "server_port",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "9283",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "the port on which the module listens for HTTP requests",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "stale_cache_strategy": {
                "name": "stale_cache_strategy",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "log",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "standby_behaviour": {
                "name": "standby_behaviour",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "default",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "default",
                  "error"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "standby_error_status_code": {
                "name": "standby_error_status_code",
                "type": "int",
                "level": "advanced",
                "flags": 1,
                "default_value": "500",
                "min": "400",
                "max": "599",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "rbd_support",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_concurrent_snap_create": {
                "name": "max_concurrent_snap_create",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "mirror_snapshot_schedule": {
                "name": "mirror_snapshot_schedule",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "trash_purge_schedule": {
                "name": "trash_purge_schedule",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "restful",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "enable_auth": {
                "name": "enable_auth",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "key_file": {
                "name": "key_file",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_requests": {
                "name": "max_requests",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "500",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Maximum number of requests to keep in memory. When new request comes in, the oldest request will be removed if the number of requests exceeds the max request number. if un-finished request is removed, error message will be logged in the ceph-mgr log.",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_addr": {
                "name": "server_addr",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "server_port": {
                "name": "server_port",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "rgw",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "secondary_zone_period_retry_limit": {
                "name": "secondary_zone_period_retry_limit",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "5",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "RGW module period update retry limit for secondary site",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "rook",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "storage_class": {
                "name": "storage_class",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "local",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "storage class name for LSO-discovered PVs",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "selftest",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "roption1": {
                "name": "roption1",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "roption2": {
                "name": "roption2",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "xyz",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption1": {
                "name": "rwoption1",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption2": {
                "name": "rwoption2",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption3": {
                "name": "rwoption3",
                "type": "float",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption4": {
                "name": "rwoption4",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption5": {
                "name": "rwoption5",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption6": {
                "name": "rwoption6",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "rwoption7": {
                "name": "rwoption7",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "1",
                "max": "42",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "testkey": {
                "name": "testkey",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "testlkey": {
                "name": "testlkey",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "testnewline": {
                "name": "testnewline",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "snap_schedule",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "allow_m_granularity": {
                "name": "allow_m_granularity",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "allow minute scheduled snapshots",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "dump_on_update": {
                "name": "dump_on_update",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "dump database to debug log on update",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "stats",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "status",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "telegraf",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "address": {
                "name": "address",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "unixgram:///tmp/telegraf.sock",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "interval": {
                "name": "interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "15",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "telemetry",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "channel_basic": {
                "name": "channel_basic",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Share basic cluster information (size, version)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "channel_crash": {
                "name": "channel_crash",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Share metadata about Ceph daemon crashes (version, stack straces, etc)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "channel_device": {
                "name": "channel_device",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Share device health metrics (e.g., SMART data, minus potentially identifying info like serial numbers)",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "channel_ident": {
                "name": "channel_ident",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Share a user-provided description and/or contact email for the cluster",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "channel_perf": {
                "name": "channel_perf",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Share various performance metrics of a cluster",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "contact": {
                "name": "contact",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "description": {
                "name": "description",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "device_url": {
                "name": "device_url",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "https://telemetry.ceph.com/device",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "enabled": {
                "name": "enabled",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "interval": {
                "name": "interval",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "24",
                "min": "8",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "last_opt_revision": {
                "name": "last_opt_revision",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "1",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "leaderboard": {
                "name": "leaderboard",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "leaderboard_description": {
                "name": "leaderboard_description",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "organization": {
                "name": "organization",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "proxy": {
                "name": "proxy",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "url": {
                "name": "url",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "https://telemetry.ceph.com/report",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "test_orchestrator",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "volumes",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "max_concurrent_clones": {
                "name": "max_concurrent_clones",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "4",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Number of asynchronous cloner threads",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "periodic_async_work": {
                "name": "periodic_async_work",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Periodically check for async work",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "snapshot_clone_delay": {
                "name": "snapshot_clone_delay",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "0",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Delay clone begin operation by snapshot_clone_delay seconds",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "snapshot_clone_no_wait": {
                "name": "snapshot_clone_no_wait",
                "type": "bool",
                "level": "advanced",
                "flags": 0,
                "default_value": "True",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "Reject subvolume clone request when cloner threads are busy",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          },
          {
            "name": "zabbix",
            "can_run": true,
            "error_string": "",
            "module_options": {
              "discovery_interval": {
                "name": "discovery_interval",
                "type": "uint",
                "level": "advanced",
                "flags": 0,
                "default_value": "100",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "identifier": {
                "name": "identifier",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "interval": {
                "name": "interval",
                "type": "secs",
                "level": "advanced",
                "flags": 0,
                "default_value": "60",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_level": {
                "name": "log_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster": {
                "name": "log_to_cluster",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_cluster_level": {
                "name": "log_to_cluster_level",
                "type": "str",
                "level": "advanced",
                "flags": 1,
                "default_value": "info",
                "min": "",
                "max": "",
                "enum_allowed": [
                  "",
                  "critical",
                  "debug",
                  "error",
                  "info",
                  "warning"
                ],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "log_to_file": {
                "name": "log_to_file",
                "type": "bool",
                "level": "advanced",
                "flags": 1,
                "default_value": "False",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "zabbix_host": {
                "name": "zabbix_host",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "zabbix_port": {
                "name": "zabbix_port",
                "type": "int",
                "level": "advanced",
                "flags": 0,
                "default_value": "10051",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              },
              "zabbix_sender": {
                "name": "zabbix_sender",
                "type": "str",
                "level": "advanced",
                "flags": 0,
                "default_value": "/usr/bin/zabbix_sender",
                "min": "",
                "max": "",
                "enum_allowed": [],
                "desc": "",
                "long_desc": "",
                "tags": [],
                "see_also": []
              }
            }
          }
        ]
      }
    ]
  },
  "pools": [
    {},
    {},
    {},
    {},
    {},
    {},
    {}
  ],
  "df": {
    "stats": {
      "total_avail_bytes": 160895123456,
      "total_bytes": 161048690688,
      "total_used_raw_bytes": 153567232
    }
  },
  "client_perf": {
    "read_bytes_sec": 0,
    "read_op_per_sec": 0,
    "recovering_bytes_per_sec": 0,
    "write_bytes_sec": 0,
    "write_op_per_sec": 0
  },
  "hosts": 3,
  "rgw": 0,
  "iscsi_daemons": {
    "up": 0,
    "down": 0
  }
}
